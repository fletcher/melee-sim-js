define(function () {
    "use strict";
    // http://stackoverflow.com/a/9753841/1168342
    var listHeight = 15;
    var heroesListJSON = [];

    var aggregate =  {
		"attributes" : [
	{{#attributes}}
			{
				"ST" : {{ST}},
				"DX" : {{DX}}
			},
	{{/attributes}}
			{}
		],
		"armor" : [
	{{#armor}}
			{
				"ID": "{{ID}}",
				"Name": "{{Name}}",
				"HitsStopped": {{HitsStopped}},
				"MAAdj": {{MAAdj}},
				"DXAdj": {{DXAdj}}
			},
	{{/armor}}
			{}
		],
		"shield" : [
	{{#shield}}
			{
				"ID": "{{ID}}",
				"Name": "{{Name}}",
				"HitsStopped": {{HitsStopped}},
				"DXAdj": {{DXAdj}}
			},
	{{/shield}}
			{}
		],
		"weapon" : [
	{{#weapon}}
			{
				"ID": "{{ID}}",
				"Name": "{{Name}}",
				"MinST": {{MinST}},
				"Dice": {{Dice}},
				"Modifier": {{Modifier}},
				"TwoHands": {{TwoHands}},
				"Thrown": {{Thrown}},
				"Pole": {{Pole}}
			},
	{{/weapon}}
			{}
		]
	};


	// Build list of heroes
	var counter = 100;

	for (var i = 0; i < aggregate.attributes.length; i++) {
		if (aggregate.attributes[i].ST) {
			for (var j = 1; j < aggregate.weapon.length; j++) {
				if (aggregate.weapon[j].Name) {
					for (var k = 0; k < aggregate.armor.length; k++) {
						if (aggregate.armor[k].Name) {
							for (var l = 0; l < aggregate.shield.length; l++) {
								if (aggregate.shield[l].Name) {
									if (aggregate.attributes[i].ST >= aggregate.weapon[j].MinST) {
										// Can hero wield this weapon?
										if (!(aggregate.weapon[j].TwoHands && aggregate.shield[l].ID != "NO_SHIELD")) {
											// No shield with two-handed weapons
											var hero = { "name" : counter + ":ST" + aggregate.attributes[i].ST
												+ ";DX" + aggregate.attributes[i].DX
												+ ";" + aggregate.weapon[j].Name
												+ ";" + aggregate.armor[k].Name
												+ ";" + aggregate.shield[l].Name,
												"st" : aggregate.attributes[i].ST,
												"dx" : aggregate.attributes[i].DX,
												"weapon" : aggregate.weapon[j].ID,
												"armor" : aggregate.armor[k].ID,
												"shield" : aggregate.shield[l].ID
											};

											heroesListJSON.push(hero);
											counter++;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

        
    //    console.log("Loading HeroesSingleton");
    return {
        getHeroesListJSON: function () {
            return heroesListJSON;
        },
        getListHeight: function () {
            return listHeight;
        }
    }

});
